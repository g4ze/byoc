{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Homepage","text":"<p>This a single click container deployment platform.</p> <ul> <li>put container registry link</li> <li>pass ports to be exposed</li> <li>get a deployed link to reach your container.</li> </ul> <p>My main aim with the project is to reduce testing time and deployment complexities for small backend based projects.</p> <p>Check out this youtube video to see how the app functions live:</p>"},{"location":"#getting-started","title":"Getting started","text":"<ul> <li> <p> Abouts  More</p> </li> <li> <p> Setup  More</p> </li> <li> <p> Contribute  More</p> </li> </ul>"},{"location":"about/","title":"About","text":"<p>The projects author, Nilay Gupta is a fairly messy person. Please forgive him for writing crappy code, he just wants to help :)</p> <p>Contact <code>nilayguptaforwork@gmail.com</code> for any queries and business.</p>"},{"location":"contribute/","title":"Contribute","text":"<p>This is an open sourced project and we support contributions! Checkout our github issues pages to begin. You can find Social links to reach in the bottom of the site.</p>"},{"location":"contribute/#code-of-conduct","title":"Code of Conduct","text":"<p>Just be cool, open to discuss and treat everyone well.(I'd write a more detailed one soon :P)</p>"},{"location":"contribute/#contribution-checklist","title":"Contribution checklist","text":""},{"location":"contribute/#linters","title":"Linters","text":""},{"location":"contribute/#pr-steps","title":"PR steps","text":"<p>Everytime you make a change to the schema or model run <pre><code>go run github.com/steebchen/prisma-client-go migrate dev --name migration_name\n</code></pre></p>"},{"location":"contribute/#review-process","title":"review process","text":""},{"location":"setup/","title":"Setup","text":"<p>As our fortunes seem, the project is not deployed for public use due to shortage of finances. We support open source initiative and hence urge you to go through a few simple and easy steps to get your own instance up and running!</p>"},{"location":"setup/#prerequisites","title":"Prerequisites","text":""},{"location":"setup/#aws","title":"AWS","text":"<ul> <li>AWS secreets access id and keys.</li> <li>IAM user with ECS admin policy.</li> <li>Decide on AWS Region (based on wherever you are situated)</li> <li>ECS_VPC- any VPC you make in your region.</li> <li>Subnets, based on your needs, make any amount. The project has three subnet variables in its template, add subnets based on what you desire. Make sure to change <code>/pkg/core/service-ops.go</code> ; <code>pkg/core/load-balancer-ops.go</code> and <code>pkg/handlers/health.go</code> w.r.t. how many subnets you add. </li> </ul> <p>Tip</p> <p>It is recommended to have three subnets if you're new to the project and don't want to tinker around.</p>"},{"location":"setup/#docker","title":"Docker","text":"<ul> <li>Docker cli, engine and running demon</li> <li>Docker compose</li> </ul> <p>Note</p> <p>We've added compose for local dev and usage, suggested to use swarm for more reliable use cases. </p>"},{"location":"setup/#golang","title":"Golang","text":"<p>Go version <code>go1.22.5</code> (not required if developing on fe)</p>"},{"location":"setup/#frontend","title":"Frontend","text":"<p>Any Javascript/typescript runtime, preferrably node.</p>"},{"location":"setup/#dev-setup","title":"Dev setup","text":"<p>For Frontend based development, it is recommended to build and run the backend using <code>docker compose</code>.</p>"},{"location":"setup/#backend","title":"Backend","text":"<p>Most straight forward to quicly start BE would be to use docker compose. For ease of setup, everything is in place.</p> <p>We do need to setup all unset variables in the .env.tamplate file. <pre><code>cp .env.template .env\n</code></pre> Now set all the required variables.</p> <p>Just execute the commands below in prject root folder (BYOC/)</p> <ul> <li>start the containers: <pre><code>docker compose up\n</code></pre></li> <li>for first time running, we need to push and create initial client in the db: <pre><code>docker exec -it byoc_app bash\ncd ../app/pkg/database\ngo run github.com/steebchen/prisma-client-go db push\n</code></pre> That's it. Everything good to go now!</li> </ul> <p>Note</p> <p>if you want to work on the BE, just start it using <code>go cmd/main.go</code> for BE dev. Do a compose build to check if eveything is in place and you're good to go.</p>"},{"location":"setup/#frontend_1","title":"Frontend","text":"<p>The <code>fe</code> folder acts as the root flder for our frontend written in NEXTjs. It alse acts as a proxy server for proxying custom paths to the deployment DNS.</p> <p>set env using <code>cp fe/.env.template fe/.env</code></p> <p>Since our backend is serving on port 80 (if deployed from docker compose), do check in <code>fe/.env</code> that <code>NEXT_PUBLIC_BE_URL=http://localhost:80</code> In the frontend <code>fe</code> folder: <pre><code>npm i\nnpm run dev\n</code></pre></p> <p>Tip</p> <p>If you're not using docker compose to run the backend, backend would be served on port <code>2001</code> and hence you should either delete <code>NEXT_PUBLIC_BE_URL=http://localhost:80</code> or set it to <code>http://localhost:2001</code></p>"}]}